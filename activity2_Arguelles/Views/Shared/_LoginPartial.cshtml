@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager

@inject UserManager<IdentityUser> UserManager

@inject RoleManager<IdentityRole> RoleManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        @if (await UserManager.GetUserAsync(User) is {} user && await UserManager.IsInRoleAsync(user, "Administrator"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark fw-bold" href="/admin/add" title="Manage"><i class="bi bi-pencil-square"></i> Edit Products</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark fw-bold" title="Manage" href="/admin/transactions"><i class="bi bi-eye"></i> View Transactions</a>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register"><i class="bi bi-person-add"></i> Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-box-arrow-in-right"></i> Login</a>
        </li>
    }
</ul>